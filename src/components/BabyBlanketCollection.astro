---
import { Image } from 'astro:assets'
import ProductCard from './ProductCard.astro'
import { cn } from '@/utils/cn'
// Import style images for gallery
import blanket01Image from '@/assets/images/cl__blanket_01.jpg'
import blanket02Image from '@/assets/images/cl__blanket_02.jpg'
import blanket03Image from '@/assets/images/cl__blanket_03.jpg'
import blanket04Image from '@/assets/images/cl__blanket_04.jpg'
import blanket05Image from '@/assets/images/cl__blanket_05.jpg'
import blanket06Image from '@/assets/images/cl__blanket_06.jpg'
import blanket07Image from '@/assets/images/cl__blanket_07.jpg'
import blanket08Image from '@/assets/images/cl__blanket_08.jpg'
import blanket01 from '@/assets/images/img-blanket-1.jpg'
import blanket02 from '@/assets/images/img-blanket-2.jpg'
import blanket03 from '@/assets/images/img-blanket-3.jpg'

interface Props {
  class?: string
}

const { class: className = '' } = Astro.props

// Gallery images with rotation values
const galleryImages = [
  { image: blanket01Image, rotation: -12, alt: 'Baby Blanket Style 1' },
  { image: blanket02Image, rotation: 8, alt: 'Baby Blanket Style 2' },
  { image: blanket03Image, rotation: -10, alt: 'Baby Blanket Style 3' },
  { image: blanket04Image, rotation: 15, alt: 'Baby Blanket Style 4' },
  { image: blanket05Image, rotation: -7, alt: 'Baby Blanket Style 5' },
  { image: blanket06Image, rotation: 9, alt: 'Baby Blanket Style 6' },
  { image: blanket07Image, rotation: -11, alt: 'Baby Blanket Style 7' },
  { image: blanket08Image, rotation: 6, alt: 'Baby Blanket Style 8' },
]

// Product cards data
const products = [
  {
    id: 'blanket-1',
    image: blanket01,
    modelNumber: 'NNB72501',
    title: 'Baby Shell Blanket',
    copy: '軽くて暖かい、お手入れ簡単な授乳対応フリースワンピース',
    price: '¥14,300 (Tax incl.)',
    link: 'https://www.goldwin.co.jp/tnf/ec/pro/disp/2/NNB72501',
  },
  {
    id: 'blanket-2',
    image: blanket02,
    modelNumber: 'NNB72501',
    title: 'Baby Fleece Lining Blanket',
    copy: '軽くて暖かい、お手入れ簡単な授乳対応フリースワンピース',
    price: '¥14,300 (Tax incl.)',
    link: 'https://www.goldwin.co.jp/tnf/ec/pro/disp/2/NNB72501',
  },
  {
    id: 'blanket-3',
    image: blanket03,
    modelNumber: 'NNB72501',
    title: 'Baby Fleece Lining Blanket',
    copy: '軽くて暖かい、お手入れ簡単な授乳対応フリースワンピース',
    price: '¥14,300 (Tax incl.)',
    link: 'https://www.goldwin.co.jp/tnf/ec/pro/disp/2/NNB72501',
  },
]
---

<section
  class={cn('py-16 md:py-24 lg:py-32 bg-navy-dark overflow-hidden', className)}
>
  <div class="container mx-auto px-4">
    <!-- Section Title -->
    <h2
      class="text-center font-display font-medium text-cream mb-36 leading-tight text-[3.819vw]"
    >
      Baby Blanket<br />
      <span class="text-brown">Collection</span>
    </h2>

    <!-- Gallery Grid -->
    <div
      class="gallery-container grid grid-cols-2 md:grid-cols-4 gap-0 mb-16 md:mb-24 relative"
    >
      {
        galleryImages.map((item, index) => (
          <div
            class={cn(
              'gallery-image relative overflow-visible',
              index % 2 === 1 && '-ml-4 md:-ml-6 lg:-ml-8',
              index >= 2 && '-mt-4 md:-mt-6 lg:-mt-8',
              index === 0 && 'z-10',
              index === 1 && 'z-20',
              index === 2 && 'z-30',
              index === 3 && 'z-40',
              index === 4 && 'z-50',
              index === 5 && 'z-60',
              index === 6 && 'z-70',
              index === 7 && 'z-80'
            )}
            data-rotation={item.rotation}
          >
            <div class="shadow-2xl">
              <div class="aspect-square overflow-hidden">
                <Image
                  src={item.image}
                  alt={item.alt}
                  widths={[300, 400, 500]}
                  sizes="(max-width: 768px) 50vw, 25vw"
                  loading="lazy"
                  class="h-full w-full object-cover"
                />
              </div>
            </div>
          </div>
        ))
      }
    </div>

    <!-- Product Cards -->
    <div
      class="grid grid-cols-1 md:grid-cols-3 gap-6 md:gap-8 lg:gap-10 max-w-6xl mx-auto"
    >
      {products.map((product) => <ProductCard {...product} />)}
    </div>
  </div>
</section>

<style>
  /* Remove hover effect */

  /* Z-index classes for stacking order */
  .z-10 {
    z-index: 10;
  }
  .z-20 {
    z-index: 20;
  }
  .z-30 {
    z-index: 30;
  }
  .z-40 {
    z-index: 40;
  }
  .z-50 {
    z-index: 50;
  }
  .z-60 {
    z-index: 60;
  }
  .z-70 {
    z-index: 70;
  }
  .z-80 {
    z-index: 80;
  }

  /* Images will be hidden via JavaScript */
</style>

<script>
  import { gsap } from 'gsap'
  import { ScrollTrigger } from 'gsap/ScrollTrigger'
  import { createManagedScrollTrigger } from '@/utils/gsap-manager'

  // Register ScrollTrigger plugin
  gsap.registerPlugin(ScrollTrigger)

  const isDevelopment = import.meta.env.DEV

  function initBabyBlanketAnimation() {
    const galleryContainer = document.querySelector('.gallery-container')
    const galleryImages = document.querySelectorAll('.gallery-image')

    if (!galleryContainer || galleryImages.length === 0) return

    // Store initial rotation values for each image
    const initialRotations: number[] = []

    // Check if ScrollTrigger already passed this section
    const containerRect = galleryContainer.getBoundingClientRect()
    const windowHeight = window.innerHeight
    const hasAlreadyPassed = containerRect.top < windowHeight * 0.2
    console.log(
      '🚀 BabyBlanketCollection: hasAlreadyPassed =',
      hasAlreadyPassed
    )

    // Set initial positions for each image
    galleryImages.forEach((image, index) => {
      const angle = (index / galleryImages.length) * 360
      const radius = 150 // Distance from center in viewport units

      // Calculate initial position based on circular distribution
      const x = Math.cos((angle * Math.PI) / 180) * radius
      const y = Math.sin((angle * Math.PI) / 180) * radius
      const initialRotation = gsap.utils.random(-180, 180)
      initialRotations[index] = initialRotation

      const finalRotation =
        (image as HTMLElement).getAttribute('data-rotation') || '0'

      // If already scrolled past, show in final position
      if (hasAlreadyPassed) {
        gsap.set(image, {
          xPercent: 0,
          yPercent: 0,
          rotation: parseFloat(finalRotation),
          opacity: 1,
        })
      } else {
        // Set initial state for animation
        gsap.set(image, {
          xPercent: x,
          yPercent: y,
          rotation: initialRotation,
          opacity: 1,
        })
      }
    })

    // Only create ScrollTrigger if not already passed
    if (!hasAlreadyPassed) {
      // Create timeline for animations
      const tl = gsap.timeline({
        paused: true, // Timeline will be controlled by ScrollTrigger
      })

      // Set up animations for all images
      galleryImages.forEach((image, index) => {
        const element = image as HTMLElement
        const finalRotation = parseFloat(
          element.getAttribute('data-rotation') || '0'
        )

        // Add animation to timeline
        tl.to(
          element,
          {
            xPercent: 0,
            yPercent: 0,
            rotation: finalRotation,
            opacity: 1,
            duration: 1,
            ease: 'steps(12)',
          },
          index * 0.05
        ) // Stagger
      })

      // Create managed ScrollTrigger
      const scrollTrigger = createManagedScrollTrigger('baby-blanket-gallery', {
        trigger: galleryContainer,
        start: 'top 80%',
        end: 'center center',
        markers: isDevelopment,
        scrub: 1,
        onUpdate: (self) => {
          const progress = self.progress
          console.log('🚀 ScrollTrigger progress:', progress)
          // Manually control timeline progress based on scroll
          tl.progress(progress)
        },
      })

      if (scrollTrigger) {
        console.log('🚀 ScrollTrigger created successfully')
      } else {
        console.error('❌ Failed to create ScrollTrigger')
      }
    }
  }

  // 初期化
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initBabyBlanketAnimation)
  } else {
    initBabyBlanketAnimation()
  }

  // Astro page transitions対応
  document.addEventListener('astro:page-load', initBabyBlanketAnimation)
</script>
