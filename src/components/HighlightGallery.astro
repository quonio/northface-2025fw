---
import { Image } from 'astro:assets'
import { cn } from '@/utils/cn'
import style01 from '@/assets/images/hg__sub-01.jpg'
import style02 from '@/assets/images/hg__sub-02.jpg'
import style03 from '@/assets/images/hg__sub-03.jpg'
import style04 from '@/assets/images/hg__sub-04.jpg'
import style05 from '@/assets/images/hg__sub-05.jpg'
import style06 from '@/assets/images/hg__sub-06.jpg'
import tape2 from '@/assets/images/decorations/tape-2.svg?url'
import tape6 from '@/assets/images/decorations/tape-6.svg?url'

const isDevelopment = import.meta.env.DEV

interface Props {
  class?: string
}

const { class: className = '' } = Astro.props
---

<section class={cn('mb-[7.4vw] md:mb-4 lg:pb-20 overflow-hidden', className)}>
  <div class="container mx-auto px-4">
    <!-- First 3 images -->
    <div
      class="mb-[16vw] grid grid-cols-1 gap-4 md:mb-20 md:grid-cols-3 md:gap-6 lg:gap-8"
    >
      <div
        class="gallery-item aspect-[3/4] overflow-hidden border border-navy-dark"
      >
        <Image
          src={style01}
          alt="THE NORTH FACE MATERNITY+ Style 1"
          widths={[390, 500, 600]}
          sizes="(max-width: 768px) 100vw, 33vw"
          loading="lazy"
          class="h-full w-full object-cover"
        />
      </div>
      <div class="gallery-item aspect-[3/4] border border-navy-dark relative">
        <Image
          src={style02}
          alt="THE NORTH FACE MATERNITY+ Style 2"
          widths={[390, 500, 600]}
          sizes="(max-width: 768px) 100vw, 33vw"
          loading="lazy"
          class="h-full w-full object-cover"
        />
        <!-- Tape decoration on image (desktop only) -->
        <img
          src={tape2}
          alt="Decorative tape"
          class="tape-image absolute -bottom-[1.8vw] left-1/2 translate-x-[-50%] w-[14.8vw] max-w-[213px] h-auto opacity-0 z-10 hidden md:block"
        />
      </div>
      <div class="gallery-item aspect-[3/4] border border-navy-dark relative">
        <Image
          src={style03}
          alt="THE NORTH FACE MATERNITY+ Style 3"
          widths={[390, 500, 600]}
          sizes="(max-width: 768px) 100vw, 33vw"
          loading="lazy"
          class="h-full w-full object-cover"
        />
        <!-- Tape decoration on image (mobile only) -->
        <img
          src={tape2}
          alt="Decorative tape"
          class="tape-image absolute -bottom-[5vw] left-1/2 translate-x-[-50%] w-[40vw] h-auto opacity-0 z-10 block md:hidden"
        />
      </div>
    </div>

    <!-- Title Section -->
    <div class="mb-[16vw] text-center md:mb-20">
      <h2
        class="font-display text-tape-navy-dark text-[5.87vw] font-medium md:text-4xl lg:text-5xl"
      >
        THE NORTH FACE <span class="text-brown">MATERNITY+</span>
      </h2>
    </div>

    <!-- Second 3 images -->
    <div
      class="mb-[16vw] grid grid-cols-1 gap-4 md:mb-24 md:grid-cols-3 md:gap-6 lg:gap-8"
    >
      <div class="gallery-item aspect-[3/4] border border-navy-dark relative">
        <Image
          src={style04}
          alt="THE NORTH FACE MATERNITY+ Style 4"
          widths={[390, 500, 600]}
          sizes="(max-width: 768px) 100vw, 33vw"
          loading="lazy"
          class="h-full w-full object-cover transition-transform"
        />
        <!-- Tape decoration on image (mobile only) -->
        <img
          src={tape6}
          alt="Decorative tape"
          class="tape-image-2 absolute -top-[5vw] left-1/2 translate-x-[-50%] w-[25vw] h-auto opacity-0 z-10 block md:hidden"
        />
      </div>
      <div class="gallery-item aspect-[3/4] border border-navy-dark relative">
        <Image
          src={style05}
          alt="THE NORTH FACE MATERNITY+ Style 5"
          widths={[390, 500, 600]}
          sizes="(max-width: 768px) 100vw, 33vw"
          loading="lazy"
          class="h-full w-full object-cover"
        />
        <!-- Tape decoration on image (desktop only) -->
        <img
          src={tape6}
          alt="Decorative tape"
          class="tape-image-2 absolute -top-[1.8vw] left-1/2 translate-x-[-50%] w-[9.4vw] h-auto opacity-0 z-10 hidden md:block"
        />
      </div>
      <div
        class="gallery-item aspect-[3/4] overflow-hidden border border-navy-dark"
      >
        <Image
          src={style06}
          alt="THE NORTH FACE MATERNITY+ Style 6"
          widths={[390, 500, 600]}
          sizes="(max-width: 768px) 100vw, 33vw"
          loading="lazy"
          class="h-full w-full object-cover"
        />
      </div>
    </div>

    <!-- Description Text -->
    <div class="mx-auto max-w-[85.33vw] md:max-w-max">
      <p
        class="text-tape-navy-dark text-center text-[4vw] md:text-[1.1vw] leading-loose font-sans-jp"
      >
        THE NORTH
        FACEのMATERNITY+は、挑戦や変化に立ち向かうことを楽しむためのアイテムラインです。<br
        />
        性別を問わず育児をする人の負担を軽減し、子どもの成長とともに変化を楽しみ、<br
          class="hidden md:block"
        />
        長く愛着を持つことができるウエアを取り揃えています。<br />
        MATERNITY+は、「妊娠・出産や子育てを経験する家族」のEXPLORATIONを叶えるカテゴリーとして、<br
          class="hidden md:block"
        />
        育児をするひとを性別を問わずサポートします。
      </p>
    </div>
  </div>
</section>

<script>
  import { gsap } from 'gsap'
  import { createManagedScrollTrigger } from '@/utils/gsap-manager'

  const isDevelopment = import.meta.env.DEV

  function initHighlightGalleryAnimations() {
    console.log('🚀 HighlightGallery: Starting animations')

    // 全てのギャラリーアイテムの初期状態を設定
    const allGalleryItems = document.querySelectorAll('.gallery-item')
    allGalleryItems.forEach((item, index) => {
      // より細かい初期位置の設定
      let initialX = 0
      let initialY = 0
      let initialRotation = 0

      // 最初の3枚と2番目の3枚で同じパターンを適用
      const positionIndex = index % 3

      switch (positionIndex) {
        case 0: // 左の画像：左下から、左に傾ける
          initialX = -600
          initialY = 300
          initialRotation = -15
          break
        case 1: // 真ん中の画像：真ん中やや右下から、少し右に傾ける
          initialX = 200
          initialY = 250
          initialRotation = 5
          break
        case 2: // 右の画像：さらに右寄りの右下から、右に傾ける
          initialX = 700
          initialY = 350
          initialRotation = 20
          break
      }

      gsap.set(item, {
        x: initialX,
        y: initialY,
        rotation: initialRotation,
        opacity: 1,
        scale: 1,
      })
    })

    // 最初の3つの画像用のScrollTrigger
    const firstGallerySection = document.querySelectorAll('.grid')[0]
    if (firstGallerySection) {
      createManagedScrollTrigger('highlight-gallery-first', {
        trigger: firstGallerySection,
        start: 'top 80%',
        end: 'bottom 20%',
        markers: isDevelopment,
        onEnter: () => {
          console.log('📍 First Gallery ScrollTrigger: onEnter')
          const firstThreeItems =
            firstGallerySection.querySelectorAll('.gallery-item')
          gsap.to(firstThreeItems, {
            x: 0,
            y: 0,
            rotation: 0,
            opacity: 1,
            scale: 1,
            duration: 0.8,
            stagger: 0.15,
            ease: 'steps(3, end)',
            onComplete: () => {
              // 最初のギャラリーのアニメーション完了後にテープを表示
              const tapeImages =
                firstGallerySection.querySelectorAll('.tape-image')
              tapeImages.forEach((tape) => {
                // 初期状態を設定
                gsap.set(tape, {
                  rotation: -5,
                })
                // アニメーション
                gsap.to(tape, {
                  opacity: 1,
                  rotation: 0,
                  duration: 0.3,
                  ease: 'power2.out',
                })
              })
            },
          })
        },
        onLeave: () => console.log('📍 First Gallery ScrollTrigger: onLeave'),
        onEnterBack: () =>
          console.log('📍 First Gallery ScrollTrigger: onEnterBack'),
        onLeaveBack: () =>
          console.log('📍 First Gallery ScrollTrigger: onLeaveBack'),
      })
    }

    // タイトルのアニメーション（ScrollTriggerなし）
    const testElement = document.querySelector('.text-center h2')
    if (testElement) {
      console.log('✅ Test element found:', testElement)
      gsap.from(testElement, {
        duration: 2,
        y: 50,
        opacity: 0,
        ease: 'bounce.out',
        onComplete: () => {
          console.log('🎉 Basic animation completed!')
        },
      })
    }

    // 2番目の3つの画像用のScrollTrigger
    const secondGallerySection = document.querySelectorAll('.grid')[1]
    if (secondGallerySection) {
      createManagedScrollTrigger('highlight-gallery-second', {
        trigger: secondGallerySection,
        start: 'top 80%',
        end: 'bottom 20%',
        markers: isDevelopment,
        onEnter: () => {
          console.log('📍 Second Gallery ScrollTrigger: onEnter')
          const secondThreeItems =
            secondGallerySection.querySelectorAll('.gallery-item')
          gsap.to(secondThreeItems, {
            x: 0,
            y: 0,
            rotation: 0,
            opacity: 1,
            scale: 1,
            duration: 0.8,
            stagger: 0.15,
            ease: 'steps(3, end)',
            onComplete: () => {
              // 2番目のギャラリーのアニメーション完了後にテープを表示
              const tapeImages2 =
                secondGallerySection.querySelectorAll('.tape-image-2')
              tapeImages2.forEach((tape) => {
                // 初期状態を設定
                gsap.set(tape, {
                  rotation: -5,
                })
                // アニメーション
                gsap.to(tape, {
                  opacity: 1,
                  rotation: 0,
                  duration: 0.3,
                  ease: 'power2.out',
                })
              })
            },
          })
        },
        onLeave: () => console.log('📍 Second Gallery ScrollTrigger: onLeave'),
        onEnterBack: () =>
          console.log('📍 Second Gallery ScrollTrigger: onEnterBack'),
        onLeaveBack: () =>
          console.log('📍 Second Gallery ScrollTrigger: onLeaveBack'),
      })
    }

    // デバッグ情報を表示
    if (import.meta.env.DEV) {
      const memoryInfo = (performance as any).memory
      if (memoryInfo) {
        console.log('💾 Memory usage:', {
          used: Math.round(memoryInfo.usedJSHeapSize / 1024 / 1024) + ' MB',
          total: Math.round(memoryInfo.totalJSHeapSize / 1024 / 1024) + ' MB',
          limit: Math.round(memoryInfo.jsHeapSizeLimit / 1024 / 1024) + ' MB',
        })
      }
    }
  }

  // 初期化
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      console.log('📄 DOM loaded, starting HighlightGallery animations...')
      setTimeout(initHighlightGalleryAnimations, 100)
    })
  } else {
    console.log('📄 DOM ready, starting HighlightGallery animations...')
    setTimeout(initHighlightGalleryAnimations, 100)
  }

  // Astro page transitions
  document.addEventListener('astro:page-load', () => {
    console.log(
      '🔄 Astro page loaded, restarting HighlightGallery animations...'
    )
    setTimeout(initHighlightGalleryAnimations, 100)
  })
</script>
